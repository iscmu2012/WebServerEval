Servers:
 - Client: unix
 - Server: boggle.lab.ece.cmu.local 172.19.132.112
 - Fastcgi: settlers.lab.ece.cmu.local 172.19.132.124 


Evaluation:

File Sizes:
1, 2, 3, 4, 5, 8, 10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 100, 125, 150, 200


Configuration Details:
* SPED
- MAX_ED_EVENTS 65536
- READ_CHUNK_SIZE 1024
- EVENT_WAIT_TIMEOUT 1000
- FASTCGI_SERV_ADDR "127.0.0.1" /* probably need to change to some unix machine */
- FASTCGI_SERV_PORT "12345"
- SERVERQUEUELENGTH 50 
/* I think this is the accept queue: should be
   canged according to the accept()able paper */

* MT
NTHREADS 64 /* Not sure what the ideal number should be */
SBUFSIZE 65535

HTTPERF commandline
* httperf --hog --server unix13.andrew.cmu.edu --port=10452 --uri=/2KB.txt --http-version=1.0 --rate=X --num-conns=X*90 --timeout=x

Synthetic workload:
SPED vs MT vs AMPED
- Static file
  * no caching
  * increase file size and measure:
    1. Bandwidth
    2. Connection rate
- Dynamic file
  * no caching (obviously)
  * increase file size and measure
    1. Bandwidth
    2. Connection rate
- Optimized dynamic file
  * no caching (obviously)
  * increase file size and measure
    1. Bandwidth
    2. Connection rate

- Request vs response (autobench)
  for static, dynamic and optimized dynamic.  



autobench:
  * request rate increase:
    Results:
      - response vs request
      - other autobench stats
    For:
      - static
      - cgi
      - fastcgi

httperf:
  * file size increase:
    Results:
      - response vs request
      - bandwidth
      - latency
    For:
      - static
      - cgi
      - latency

python:
  * avg-open.py
  * avg-latency.py


